--
-- PostgreSQL database dump
--

-- Dumped from database version 15.13 (Debian 15.13-1.pgdg120+1)
-- Dumped by pg_dump version 16.9 (Ubuntu 16.9-0ubuntu0.24.04.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: uuid-ossp; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA public;


--
-- Name: EXTENSION "uuid-ossp"; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION "uuid-ossp" IS 'generate universally unique identifiers (UUIDs)';


--
-- Name: set_updated_at(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.set_updated_at() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  NEW.updated_at = now();
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.set_updated_at() OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: alerts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.alerts (
    id uuid NOT NULL,
    project_id uuid NOT NULL,
    message text NOT NULL,
    severity text NOT NULL,
    created_at timestamp without time zone NOT NULL
);


ALTER TABLE public.alerts OWNER TO postgres;

--
-- Name: error_occurrences; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.error_occurrences (
    id uuid NOT NULL,
    error_id uuid,
    user_id text,
    session_id text,
    "timestamp" timestamp with time zone NOT NULL,
    metadata jsonb
);


ALTER TABLE public.error_occurrences OWNER TO postgres;

--
-- Name: error_tags; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.error_tags (
    id uuid NOT NULL,
    error_id uuid,
    key text NOT NULL,
    value text NOT NULL
);


ALTER TABLE public.error_tags OWNER TO postgres;

--
-- Name: errors; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.errors (
    id uuid NOT NULL,
    project_id uuid NOT NULL,
    message text NOT NULL,
    stack_trace text,
    fingerprint text NOT NULL,
    occurred_at timestamp with time zone NOT NULL,
    last_seen timestamp with time zone NOT NULL,
    environment text NOT NULL,
    count integer NOT NULL,
    source text,
    type text,
    url text,
    component_stack text,
    browser_info text,
    user_id text,
    session_id text,
    status text
);


ALTER TABLE public.errors OWNER TO postgres;

--
-- Name: goose_db_version; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.goose_db_version (
    id integer NOT NULL,
    version_id bigint NOT NULL,
    is_applied boolean NOT NULL,
    tstamp timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.goose_db_version OWNER TO postgres;

--
-- Name: goose_db_version_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.goose_db_version ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.goose_db_version_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: password_resets; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.password_resets (
    email text NOT NULL,
    token text NOT NULL,
    expires_at timestamp without time zone NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.password_resets OWNER TO postgres;

--
-- Name: projects; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.projects (
    id uuid NOT NULL,
    owner_id uuid NOT NULL,
    name character varying(255) NOT NULL,
    slug character varying(255) NOT NULL,
    description text,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE public.projects OWNER TO postgres;

--
-- Name: schema_migrations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.schema_migrations (
    version bigint NOT NULL,
    dirty boolean NOT NULL
);


ALTER TABLE public.schema_migrations OWNER TO postgres;

--
-- Name: sessions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sessions (
    session_id character varying(255) NOT NULL,
    project_id uuid NOT NULL,
    user_id character varying(255),
    start_time timestamp with time zone NOT NULL,
    end_time timestamp with time zone,
    duration_ms bigint,
    error_count integer DEFAULT 0,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    oauth_data text,
    event_count integer DEFAULT 0,
    pageview_count integer DEFAULT 0
);


ALTER TABLE public.sessions OWNER TO postgres;

--
-- Name: users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    name character varying(255) NOT NULL,
    email character varying(255) NOT NULL,
    password character varying(255),
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    updated_at timestamp without time zone DEFAULT now() NOT NULL,
    provider character varying(50),
    provider_id character varying(100),
    image text
);


ALTER TABLE public.users OWNER TO postgres;

--
-- Data for Name: alerts; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.alerts (id, project_id, message, severity, created_at) FROM stdin;
\.


--
-- Data for Name: error_occurrences; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.error_occurrences (id, error_id, user_id, session_id, "timestamp", metadata) FROM stdin;
\.


--
-- Data for Name: error_tags; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.error_tags (id, error_id, key, value) FROM stdin;
\.


--
-- Data for Name: errors; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.errors (id, project_id, message, stack_trace, fingerprint, occurred_at, last_seen, environment, count, source, type, url, component_stack, browser_info, user_id, session_id, status) FROM stdin;
\.


--
-- Data for Name: goose_db_version; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.goose_db_version (id, version_id, is_applied, tstamp) FROM stdin;
1	0	t	2025-06-14 12:46:38.973913
5	1	t	2025-07-26 12:54:52.94915
6	2	t	2025-07-26 12:54:52.958778
7	3	t	2025-07-26 13:17:14.857781
\.


--
-- Data for Name: password_resets; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.password_resets (email, token, expires_at, created_at) FROM stdin;
\.


--
-- Data for Name: projects; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.projects (id, owner_id, name, slug, description, created_at, updated_at) FROM stdin;
47e3d5f5-47bf-45d9-ad5c-76af6e3ce9db	ac04823d-7ab5-4b1b-ae9d-131944ab3f7b	Manhattan project	manhattan-project	Manhattan project is an application integrated with full-stack observability and error tracking.	2025-08-02 02:00:03.167576	2025-08-02 02:00:03.167576
\.


--
-- Data for Name: schema_migrations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.schema_migrations (version, dirty) FROM stdin;
1	f
2	f
20250614133551	f
\.


--
-- Data for Name: sessions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.sessions (session_id, project_id, user_id, start_time, end_time, duration_ms, error_count, created_at, oauth_data, event_count, pageview_count) FROM stdin;
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users (id, name, email, password, created_at, updated_at, provider, provider_id, image) FROM stdin;
ac04823d-7ab5-4b1b-ae9d-131944ab3f7b	Chimezie Innocent	chimezieinnocent39@gmail.com	\N	2025-07-30 00:09:40.324144	2025-08-02 04:29:01.879788	google	117930983975730592970	https://lh3.googleusercontent.com/a/ACg8ocLk7OQgfk1-zrJab2fw8WfLSm_cCVQGio60S1mJHxuK4YhggIEVOw=s96-c
\.


--
-- Name: goose_db_version_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.goose_db_version_id_seq', 7, true);


--
-- Name: alerts alerts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.alerts
    ADD CONSTRAINT alerts_pkey PRIMARY KEY (id);


--
-- Name: error_occurrences error_occurrences_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.error_occurrences
    ADD CONSTRAINT error_occurrences_pkey PRIMARY KEY (id);


--
-- Name: error_tags error_tags_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.error_tags
    ADD CONSTRAINT error_tags_pkey PRIMARY KEY (id);


--
-- Name: errors errors_fingerprint_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.errors
    ADD CONSTRAINT errors_fingerprint_key UNIQUE (fingerprint);


--
-- Name: errors errors_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.errors
    ADD CONSTRAINT errors_pkey PRIMARY KEY (id);


--
-- Name: goose_db_version goose_db_version_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.goose_db_version
    ADD CONSTRAINT goose_db_version_pkey PRIMARY KEY (id);


--
-- Name: password_resets password_resets_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.password_resets
    ADD CONSTRAINT password_resets_pkey PRIMARY KEY (token);


--
-- Name: projects projects_owner_id_name_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.projects
    ADD CONSTRAINT projects_owner_id_name_unique UNIQUE (owner_id, name);


--
-- Name: projects projects_owner_id_slug_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.projects
    ADD CONSTRAINT projects_owner_id_slug_unique UNIQUE (owner_id, slug);


--
-- Name: projects projects_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.projects
    ADD CONSTRAINT projects_pkey PRIMARY KEY (id);


--
-- Name: schema_migrations schema_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.schema_migrations
    ADD CONSTRAINT schema_migrations_pkey PRIMARY KEY (version);


--
-- Name: sessions sessions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sessions
    ADD CONSTRAINT sessions_pkey PRIMARY KEY (session_id);


--
-- Name: error_tags unique_error_tag; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.error_tags
    ADD CONSTRAINT unique_error_tag UNIQUE (error_id, key, value);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: idx_error_occurrences_timestamp; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_error_occurrences_timestamp ON public.error_occurrences USING btree ("timestamp");


--
-- Name: users_email_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX users_email_idx ON public.users USING btree (email);


--
-- Name: users_provider_uidx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX users_provider_uidx ON public.users USING btree (provider, provider_id) WHERE ((provider IS NOT NULL) AND (provider_id IS NOT NULL));


--
-- Name: users users_set_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER users_set_updated_at BEFORE UPDATE ON public.users FOR EACH ROW EXECUTE FUNCTION public.set_updated_at();


--
-- Name: alerts alerts_project_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.alerts
    ADD CONSTRAINT alerts_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id);


--
-- Name: error_occurrences error_occurrences_error_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.error_occurrences
    ADD CONSTRAINT error_occurrences_error_id_fkey FOREIGN KEY (error_id) REFERENCES public.errors(id) ON DELETE CASCADE;


--
-- Name: error_tags error_tags_error_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.error_tags
    ADD CONSTRAINT error_tags_error_id_fkey FOREIGN KEY (error_id) REFERENCES public.errors(id) ON DELETE CASCADE;


--
-- Name: errors errors_project_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.errors
    ADD CONSTRAINT errors_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id) ON DELETE CASCADE;


--
-- Name: sessions fk_project; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sessions
    ADD CONSTRAINT fk_project FOREIGN KEY (project_id) REFERENCES public.projects(id);


--
-- Name: projects projects_owner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.projects
    ADD CONSTRAINT projects_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

